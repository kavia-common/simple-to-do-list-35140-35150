#!/usr/bin/env bash
set -euo pipefail
WS="/home/kavia/workspace/code-generation/simple-to-do-list-35140-35150/backend"
cd "$WS"
# source local env if present (non-login shells)
set +u; [ -f "$WS/.env" ] && source "$WS/.env" || true; set -u
# activate venv if present
if [ -f "$WS/.venv/bin/activate" ]; then . "$WS/.venv/bin/activate"; fi
# create Django project if missing
if [ ! -f "$WS/manage.py" ]; then django-admin startproject project .; fi
# create todo app if missing
if [ ! -d "$WS/todo" ]; then python manage.py startapp todo; fi
# create dev_settings.py with safe overrides
DEV_SETTINGS="$WS/project/dev_settings.py"
SETTINGS_RC="# dev_settings import - DO NOT REMOVE - autogenerated"
if [ ! -f "$DEV_SETTINGS" ]; then cat > "$DEV_SETTINGS" <<'PY'
# autogenerated development overrides
import os
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY', 'dev-secret-key-please-change')
DEBUG = os.environ.get('DJANGO_DEBUG', 'True') in ['True','true','1']
ALLOWED_HOSTS = ['*']
# ensure 'todo' in INSTALLED_APPS when settings evaluated
try:
    INSTALLED_APPS
except NameError:
    INSTALLED_APPS = []
if 'todo' not in INSTALLED_APPS:
    INSTALLED_APPS.append('todo')
PY
fi
# append guarded import to project/settings.py if missing
if ! grep -Fq "$SETTINGS_RC" project/settings.py; then cat >> project/settings.py <<'PY'

# dev_settings import - DO NOT REMOVE - autogenerated
try:
    from .dev_settings import *
except Exception:
    pass
# end dev_settings import
PY
fi
# create minimal todo/views.py only if missing
if [ ! -f "$WS/todo/views.py" ]; then cat > "$WS/todo/views.py" <<'PY'
from django.http import HttpResponse

def index(request):
    return HttpResponse('<html><body><h1>Todo App</h1><ul><li>Example task</li></ul></body></html>')
PY
fi
# create minimal todo/urls.py only if missing
if [ ! -f "$WS/todo/urls.py" ]; then cat > "$WS/todo/urls.py" <<'PY'
from django.urls import path
from . import views

urlpatterns = [path('', views.index, name='index')]
PY
fi
# ensure project/urls.py exists wiring todo app (create only if missing)
if [ ! -f "$WS/project/urls.py" ]; then cat > "$WS/project/urls.py" <<'PY'
"""project URL configuration (autogenerated minimal)."""
from django.contrib import admin
from django.urls import path, include

urlpatterns = [
    path('admin/', admin.site.urls),
    path('', include('todo.urls')),
]
PY
fi
